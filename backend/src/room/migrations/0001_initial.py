# Generated by Django 3.2 on 2023-11-27 12:53

from django.db import migrations, models
import src.room.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('room_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('room_code', models.CharField(max_length=12, unique=True)),
                ('pin_code', models.CharField(blank=True, max_length=6, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('max_members', models.IntegerField(blank=True, default=16, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', validators=[src.room.models.validate_image])),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates whether the room is superuser', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the room can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this room should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='chat_rooms', to='auth.Group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='chat_rooms', to='auth.Permission')),
            ],
            options={
                'verbose_name': 'Chat Room',
                'verbose_name_plural': 'Chat Rooms',
                'ordering': ['-id'],
            },
        ),
    ]
